(self.webpackChunkcryptofotball=self.webpackChunkcryptofotball||[]).push([[694],{8995:(e,i,s)=>{"use strict";e.exports=s.p+"images/eye5367e.svg"},4516:(e,i,s)=>{"use strict";e.exports=s.p+"images/futd1cdf.svg"},2003:(e,i,s)=>{"use strict";e.exports=s.p+"images/parametrese33b3.svg"},4867:(e,i,s)=>{"use strict";e.exports=s.p+"images/rectanglefd933.svg"},98:(e,i,s)=>{"use strict";e.exports=s.p+"images/searche524d.svg"},5770:(e,i,s)=>{"use strict";e.exports=s.p+"images/star71ea1.svg"},9442:(e,i,s)=>{"use strict";e.exports=s.p+"images/goldPrice1f8f4.svg"},9679:(e,i,s)=>{"use strict";e.exports=s.p+"images/ok1a141.svg"},234:(e,i,s)=>{"use strict";e.exports=s.p+"images/nextda86e.svg"},110:(e,i,s)=>{"use strict";e.exports=s.p+"images/previous1f4cf.svg"},675:(e,i,s)=>{"use strict";s.d(i,{W:()=>d});var a=s(655),t=s(5893),r=s(6317),n=s(9679),c=s(9442),l=s(3727),o=s(3356),d=function(e){var i=e.card;return(0,t.jsx)("div",(0,a.pi)({className:"marketplace-myCard"},{children:(0,t.jsxs)(l.rU,(0,a.pi)({className:"marketplace-myCard__link",to:{pathname:o.FM.FootballerCard.path,state:{card:i}}},{children:[(0,t.jsx)("img",{className:"marketplace-myCard__confirm-icon",src:n,alt:"Confirm icon"},void 0),(0,t.jsx)("img",{className:"marketplace-myCard__price-gold",src:c,alt:"Price icon"},void 0),(0,t.jsx)(r.s,{card:i,parentClassName:"marketplace-myCard"},void 0)]}),void 0)}),void 0)}},3382:(e,i,s)=>{"use strict";s.d(i,{R:()=>v});var a=s(655),t=s(5893),r=s(7294),n=s(4867),c=s(98),l=s(5770),o=s(4516),d=s(8995),p=s(2003),u=function(e){var i=e.props,s=i.label,n=i.image,c=(0,r.useState)(!1),l=c[0],o=c[1];return(0,t.jsxs)("div",(0,a.pi)({className:"filter-item",onClick:function(){return o((function(e){return!e}))}},{children:[(0,t.jsx)("span",(0,a.pi)({className:"filter-item__title"},{children:s}),void 0),(0,t.jsx)("img",{className:"filter-item__picture",src:n,alt:n&&"filter icon"},void 0),(0,t.jsx)("div",{className:"filter-item__dropdown",style:{display:l?"block":"none"}},void 0)]}),void 0)},v=function(e){var i=e.title,s=(0,r.useState)(""),v=s[0],m=s[1],g=function(e,i){this.label=e,this.image=i},_=[new g("Version",n),new g("Positions",n),new g("Nations",n),new g("Leagues",n),new g("WRF",n),new g("Stats",n),new g("",l),new g("PS",o),new g("T&S",n),new g("",d),new g("",l),new g("RPP",n),new g("",p),new g("Misc",n)];return(0,t.jsxs)("section",(0,a.pi)({className:"filter-field"},{children:[(0,t.jsx)("h1",(0,a.pi)({className:"filter-field__title"},{children:i}),void 0),(0,t.jsx)("div",(0,a.pi)({className:"filter-field__wrapper"},{children:(0,t.jsxs)("ul",(0,a.pi)({className:"filter-field__list"},{children:[(0,t.jsxs)("li",(0,a.pi)({className:"filter-field__list__item"},{children:[(0,t.jsx)("img",{src:c,alt:"Filter Icon",className:"filter-field__list__item__picture"},void 0),(0,t.jsx)("input",{value:v,placeholder:"Search",className:"filter-field__list__item__search",onChange:function(e){m(e.target.value)}},void 0)]}),void 0),_.map((function(e,i){return(0,t.jsx)("li",(0,a.pi)({className:"filter-field__list__item"},{children:(0,t.jsx)(u,{props:e},void 0)}),i)}))]}),void 0)}),void 0)]}),void 0)}},7928:(e,i,s)=>{"use strict";s.d(i,{D:()=>o});var a=s(655),t=s(5893),r=s(7294),n=s(234),c=s(110),l=function(e){var i=e.blockPages,s=e.onPageChange;return(0,t.jsx)("ul",(0,a.pi)({className:"ultimatedivision-paginator__pages"},{children:i.map((function(e,i){return(0,t.jsx)("li",(0,a.pi)({className:"ultimatedivision-paginator__pages__item",onClick:function(){return s("change page",e)}},{children:e}),i)}))}),void 0)},o=function(e){var i=e.itemCount,s=(0,r.useState)(1),o=s[0],d=s[1],p=(0,r.useState)([]),u=p[0],v=p[1],m=(0,r.useState)([]),g=m[0],_=m[1],f=(0,r.useState)([]),x=f[0],h=f[1];(0,r.useEffect)((function(){y()}),[o]);for(var j=[],N=1;N<=Math.ceil(i/8);N++)j.push(N);var b=g.length<=5&&j.length>10,w=!!g.length,k=o<5,C=j.length-o<4,P=j.length<=10,y=function(){if(j.length)return P?(v(j.slice()),_([]),void h([])):void function(){if(!P)k?(v(j.slice(0,5)),_([]),h(j.slice(-1))):k||C?C&&(v(j.slice(0,1)),_([]),h(j.slice(-5))):(v(j.slice(0,1)),_(j.slice(o+-3,o+2)),h(j.slice(-1)))}()},S=function(e,i){switch(void 0===i&&(i=o),e){case"next page":return i<j.length&&d(i+1),void y();case"previous page":return i>1&&d(i-1),void y();case"change page":return d(i),void y();default:y()}};return(0,t.jsx)("section",(0,a.pi)({className:"ultimatedivision-paginator"},{children:(0,t.jsxs)("div",(0,a.pi)({className:"ultimatedivision-paginator__wrapper"},{children:[(0,t.jsxs)("a",(0,a.pi)({className:"ultimatedivision-paginator__previous",onClick:function(){return S("previous page")}},{children:[(0,t.jsx)("img",{className:"ultimatedivision-paginator__previous__arrow",src:c,alt:"Previous page"},void 0),(0,t.jsx)("p",(0,a.pi)({className:"ultimatedivision-paginator__previous__title"},{children:"Previous page"}),void 0)]}),void 0),(0,t.jsx)(l,{blockPages:u,onPageChange:S},void 0),b&&(0,t.jsx)("span",(0,a.pi)({className:"ultimatedivision-paginator__pages__dots"},{children:"..."}),void 0),(0,t.jsx)(l,{blockPages:g,onPageChange:S},void 0),w&&(0,t.jsx)("span",(0,a.pi)({className:"ultimatedivision-paginator__pages__dots"},{children:"..."}),void 0),(0,t.jsx)(l,{blockPages:x,onPageChange:S},void 0),(0,t.jsxs)("a",(0,a.pi)({className:"ultimatedivision-paginator__next",onClick:function(){return S("next page")}},{children:[(0,t.jsx)("p",(0,a.pi)({className:"ultimatedivision-paginator__next__title"},{children:"Next page"}),void 0),(0,t.jsx)("img",{className:"ultimatedivision-paginator__next__arrow",src:n,alt:"Next page"},void 0)]}),void 0)]}),void 0)}),void 0)}},6317:(e,i,s)=>{"use strict";s.d(i,{s:()=>c});var a=s(655),t=s(5893),r=s(3727),n=s(3356),c=function(e){var i,s=e.card,c=e.parentClassName;return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)("img",{className:c+"__background-type",src:null===(i=s.style)||void 0===i?void 0:i.background,alt:"background img",draggable:!1},void 0),(0,t.jsx)("img",{className:c+"__face-picture",src:s.face,alt:"Player face",draggable:!1},void 0),(0,t.jsx)(r.rU,(0,a.pi)({to:{pathname:n.FM.FootballerCard.path,state:{card:s}}},{children:(0,t.jsx)("span",(0,a.pi)({className:c+"__name"},{children:s.playerName}),void 0)}),void 0),(0,t.jsx)("ul",(0,a.pi)({className:c+"__list"},{children:s.statsArea.map((function(e,i){return(0,t.jsx)("li",(0,a.pi)({className:c+"__list__item"},{children:e.abbreviated+" "+e.average+" "}),i)}))}),void 0)]},void 0)}},3170:(e,i,s)=>{"use strict";s.d(i,{K:()=>n});var a=s(655),t=s(7294),r=s(9226),n=function(e){var i=(0,r.I0)();(0,t.useEffect)((function(){!function(){(0,a.mG)(this,void 0,void 0,(function(){return(0,a.Jh)(this,(function(s){switch(s.label){case 0:return[4,i(e())];case 1:return s.sent(),[2]}}))}))}()}),[])}},1694:(e,i,s)=>{"use strict";s.r(i),s.d(i,{default:()=>u});var a=s(655),t=s(5893),r=s(9226),n=s(3170),c=s(9714),l=s(675),o=function(e){var i=e.cards;return(0,t.jsx)("div",(0,a.pi)({className:"club-cards"},{children:(0,t.jsx)("div",(0,a.pi)({className:"club-cards__wrapper"},{children:i.map((function(e,i){return(0,t.jsx)(l.W,{card:e},i)}))}),void 0)}),void 0)},d=s(3382),p=s(7928);const u=function(){(0,n.K)(c._y);var e=(0,r.v9)((function(e){return e.cardsReducer.club}));return(0,t.jsxs)("section",(0,a.pi)({className:"club"},{children:[(0,t.jsx)(d.R,{title:"My cards"},void 0),(0,t.jsx)(o,{cards:e},void 0),(0,t.jsx)(p.D,{itemCount:e.length},void 0)]}),void 0)}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jcnlwdG9mb3RiYWxsLy4vc3JjL2FwcC9jb21wb25lbnRzL0NsdWIvQ2x1YkNhcmRzQXJlYS9NeUNhcmQvaW5kZXgudHN4Iiwid2VicGFjazovL2NyeXB0b2ZvdGJhbGwvLi9zcmMvYXBwL2NvbXBvbmVudHMvY29tbW9uL0ZpbHRlckZpZWxkL0ZpbHRlckZpZWxkRHJvcGRvd24vaW5kZXgudHN4Iiwid2VicGFjazovL2NyeXB0b2ZvdGJhbGwvLi9zcmMvYXBwL2NvbXBvbmVudHMvY29tbW9uL0ZpbHRlckZpZWxkL2luZGV4LnRzeCIsIndlYnBhY2s6Ly9jcnlwdG9mb3RiYWxsLy4vc3JjL2FwcC9jb21wb25lbnRzL2NvbW1vbi9QYWdpbmF0b3IvUGFnaW5hdG9yQmxvY2tQYWdlcy9pbmRleC50c3giLCJ3ZWJwYWNrOi8vY3J5cHRvZm90YmFsbC8uL3NyYy9hcHAvY29tcG9uZW50cy9jb21tb24vUGFnaW5hdG9yL2luZGV4LnRzeCIsIndlYnBhY2s6Ly9jcnlwdG9mb3RiYWxsLy4vc3JjL2FwcC9jb21wb25lbnRzL2NvbW1vbi9QbGF5ZXJDYXJkL2luZGV4LnRzeCIsIndlYnBhY2s6Ly9jcnlwdG9mb3RiYWxsLy4vc3JjL2FwcC9ob29rcy9jYXJkcy50c3giLCJ3ZWJwYWNrOi8vY3J5cHRvZm90YmFsbC8uL3NyYy9hcHAvY29tcG9uZW50cy9DbHViL0NsdWJDYXJkc0FyZWEvaW5kZXgudHN4Iiwid2VicGFjazovL2NyeXB0b2ZvdGJhbGwvLi9zcmMvYXBwL3ZpZXdzL0NsdWJQYWdlL2luZGV4LnRzeCJdLCJuYW1lcyI6WyJNeUNhcmQiLCJjYXJkIiwiY2xhc3NOYW1lIiwidG8iLCJwYXRobmFtZSIsInN0YXRlIiwic3JjIiwiYWx0IiwicGFyZW50Q2xhc3NOYW1lIiwiRmlsdGVyRmllbGREcm9wZG93biIsInByb3BzIiwibGFiZWwiLCJpbWFnZSIsInVzZVN0YXRlIiwic2hvdWxkRHJvcGRvd25TaG93IiwiaGFuZGxlU2hvd2luZyIsIm9uQ2xpY2siLCJwcmV2Iiwic3R5bGUiLCJkaXNwbGF5IiwiRmlsdGVyRmllbGQiLCJ0aXRsZSIsInNlYXJjaERhdGEiLCJzZXRTZWFyY2hEYXRhIiwiZmlsdGVyRmllbGRUaXRsZXMiLCJGaWx0ZXJJdGVtIiwicmVjdGFuZ2xlIiwic3RhciIsImZ1dCIsImV5ZSIsInBhcmFtZXRyZXMiLCJzZWFyY2giLCJ2YWx1ZSIsInBsYWNlaG9sZGVyIiwib25DaGFuZ2UiLCJldmVudCIsInRhcmdldCIsIm1hcCIsIml0ZW0iLCJpbmRleCIsIlBhZ2luYXRvckJsb2NrUGFnZXMiLCJibG9ja1BhZ2VzIiwib25QYWdlQ2hhbmdlIiwicGFnZSIsIlBhZ2luYXRvciIsIml0ZW1Db3VudCIsImN1cnJlbnRQYWdlIiwic2V0Q3VycmVudFBhZ2UiLCJmaXJzdEJsb2NrUGFnZXMiLCJzZXRGaXJzdEJsb2NrUGFnZXMiLCJtaWRkbGVCbG9ja1BhZ2VzIiwic2V0TWlkZGxlQmxvY2tQYWdlcyIsImxhc3RCbG9ja1BhZ2VzIiwic2V0TGFzdEJsb2NrUGFnZXMiLCJ1c2VFZmZlY3QiLCJwb3B1bGF0ZVBhZ2VzIiwicGFnZXMiLCJpIiwiTWF0aCIsImNlaWwiLCJwdXNoIiwiaXNGaXJzdERvdHNTaG93biIsImxlbmd0aCIsImlzU2Vjb25kRG90c1Nob3duIiwiaXNDdXJyZW50SW5GaXJzdEJsb2NrIiwiaXNDdXJyZW50SW5MYXN0QmxvY2siLCJNQVhfUEFHRVNfUEVSX0JMT0NLIiwiaXNPbmVCbG9ja1JlcXVpcmVkIiwic2xpY2UiLCJyZW9yZ2FuaXplUGFnZXNCbG9jayIsInR5cGUiLCJwYWdlTnVtYmVyIiwicHJldmlvdXMiLCJuZXh0IiwiUGxheWVyQ2FyZCIsImJhY2tncm91bmQiLCJkcmFnZ2FibGUiLCJmYWNlIiwicGxheWVyTmFtZSIsInN0YXRzQXJlYSIsInByb3BlcnR5IiwiYWJicmV2aWF0ZWQiLCJhdmVyYWdlIiwidXNlQ2FyZHMiLCJ0aHVuayIsImRpc3BhdGNoIiwiZ2V0RGF0YUZyb21BcGkiLCJDbHViQ2FyZHNB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SUFBSSxjQUNKcUUsV0FBVyxRQUFLLElBRXBCLFNBQUMsTUFBSSxTQUNEekUsR0FBSSxDQUNBQyxTQUFVLHlCQUNWQyxNQUFPLENBQ0hKLEtBQUksS0FFWCxXQUVELDBCQUFNQyxVQUFjTSxFQUFlLFVBQVEsVUFDdENQLEVBQUs2RSxrQkFBVSxVQUNiLElBRVgsd0JBQUk1RSxVQUFjTSxFQUFlLFVBQVEsVUFDcENQLEVBQUs4RSxVQUFVMUMsS0FDWixTQUFDMkMsRUFBVXpDLEdBQ1AsK0JBQ0lyQyxVQUFjTSxFQUFlLGdCQUFjLFVBTXBDd0UsRUFBU0MsWUFBVyxJQUFJRCxFQUFTRSxRQUFPLE1BTDFDM0MsYUFRaEIsVUFDQSxLLDhFQzdDQTRDLEVBQVcsU0FBQ0MsR0FFckIsSUFBTUMsR0FBVyxXQU9qQixJQUFBL0IsWUFBVSxZQUpWLFksK0ZBQ0ksU0FBTStCLEVBQVNELE0sY0FBZixTLFdBSUFFLEtBQ0QsTSx3SENSTUMsRUFBMkMsU0FBQyxHLElBQUVDLEVBQUssUUFDNUQsZ0NBQUt0RixVQUFVLGNBQVksV0FDdkIseUJBQUtBLFVBQVUsdUJBQXFCLFVBQy9Cc0YsRUFBTW5ELEtBQUksU0FBQ3BDLEVBQU1zQyxHQUNkLGdCQUFDdkMsRUFBQSxFQUFNLENBQ0hDLEtBQU1BLEdBQ0RzQyxhQUVaLFVBQ0MsSSxvQkNpQmQsUUFwQnVCLFlBRW5CLE9BQVMsTUFFVCxJQUFNaUQsR0FBUSxTQUFZLFNBQUNuRixHQUFxQixPQUFBQSxFQUFNb0YsYUFBYUMsUUFFbkUsT0FDSSw4QkFBU3hGLFVBQVUsUUFBTSxZQUNyQixTQUFDa0IsRUFBQSxFQUFXLENBQ1JDLE1BQU0saUJBQVUsSUFFcEIsU0FBQ2tFLEVBQWEsQ0FDVkMsTUFBT0EsUUFBSyxJQUVoQixTQUFDNUMsRUFBQSxFQUFTLENBQ05DLFVBQVcyQyxFQUFNMUIsYUFBTSxXQUFJIiwiZmlsZSI6IjY5NC43ODg0ZGJiNWI5MTBmMmQ5YTBjNS5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIENvcHlyaWdodCAoQykgMjAyMSBDcmVkaXRvciBDb3JwLiBHcm91cC5cbi8vIFNlZSBMSUNFTlNFIGZvciBjb3B5aW5nIGluZm9ybWF0aW9uLlxuXG5pbXBvcnQgeyBQbGF5ZXJDYXJkIH0gZnJvbSAnQGNvbXBvbmVudHMvY29tbW9uL1BsYXllckNhcmQnO1xuXG4vKiogVE9ETzogcmVwbGFjZSBpdCBieSBjbGFzcyBmaWVsZHMgKi9cbmltcG9ydCBjb25maXJtSWNvbiBmcm9tICdAc3RhdGljL2ltZy9NYXJrZXRQbGFjZVBhZ2UvTXlDYXJkL29rLnN2Zyc7XG5pbXBvcnQgcHJpY2VHb2xkSWNvbiBmcm9tICdAc3RhdGljL2ltZy9NYXJrZXRQbGFjZVBhZ2UvTXlDYXJkL2dvbGRQcmljZS5zdmcnO1xuXG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyLWRvbSc7XG5pbXBvcnQgeyBSb3V0ZUNvbmZpZyB9IGZyb20gJ0AvYXBwL3JvdXRlcic7XG5cbmltcG9ydCB7IENhcmQgfSBmcm9tICdAL2NhcmQnO1xuXG5pbXBvcnQgJy4vaW5kZXguc2Nzcyc7XG5cbmV4cG9ydCBjb25zdCBNeUNhcmQ6IFJlYWN0LkZDPHsgY2FyZDogQ2FyZCB9PiA9ICh7IGNhcmQgfSkgPT5cbiAgICA8ZGl2XG4gICAgICAgIGNsYXNzTmFtZT1cIm1hcmtldHBsYWNlLW15Q2FyZFwiXG4gICAgPlxuICAgICAgICA8TGlua1xuICAgICAgICAgICAgY2xhc3NOYW1lPVwibWFya2V0cGxhY2UtbXlDYXJkX19saW5rXCJcbiAgICAgICAgICAgIHRvPXt7XG4gICAgICAgICAgICAgICAgcGF0aG5hbWU6IFJvdXRlQ29uZmlnLkZvb3RiYWxsZXJDYXJkLnBhdGgsXG4gICAgICAgICAgICAgICAgc3RhdGU6IHtcbiAgICAgICAgICAgICAgICAgICAgY2FyZCxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfX1cbiAgICAgICAgPlxuICAgICAgICAgICAgPGltZ1xuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cIm1hcmtldHBsYWNlLW15Q2FyZF9fY29uZmlybS1pY29uXCJcbiAgICAgICAgICAgICAgICBzcmM9e2NvbmZpcm1JY29ufVxuICAgICAgICAgICAgICAgIGFsdD1cIkNvbmZpcm0gaWNvblwiXG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPGltZ1xuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cIm1hcmtldHBsYWNlLW15Q2FyZF9fcHJpY2UtZ29sZFwiXG4gICAgICAgICAgICAgICAgc3JjPXtwcmljZUdvbGRJY29ufVxuICAgICAgICAgICAgICAgIGFsdD1cIlByaWNlIGljb25cIlxuICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDxQbGF5ZXJDYXJkXG4gICAgICAgICAgICAgICAgY2FyZD17Y2FyZH1cbiAgICAgICAgICAgICAgICBwYXJlbnRDbGFzc05hbWU9eydtYXJrZXRwbGFjZS1teUNhcmQnfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgPC9MaW5rPlxuICAgIDwvZGl2PjtcbiIsImltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0ICcuL2luZGV4LnNjc3MnO1xuXG5leHBvcnQgY29uc3QgRmlsdGVyRmllbGREcm9wZG93bjogUmVhY3QuRkM8eyBwcm9wczogeyBsYWJlbDogc3RyaW5nOyBpbWFnZTogc3RyaW5nIH0gfT4gPSAoeyBwcm9wcyB9KSA9PiB7XG4gICAgY29uc3QgeyBsYWJlbCwgaW1hZ2UgfSA9IHByb3BzO1xuICAgIGNvbnN0IFtzaG91bGREcm9wZG93blNob3csIGhhbmRsZVNob3dpbmddID0gdXNlU3RhdGUoZmFsc2UpO1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdlxuICAgICAgICAgICAgY2xhc3NOYW1lPVwiZmlsdGVyLWl0ZW1cIlxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4gaGFuZGxlU2hvd2luZyhwcmV2ID0+ICFwcmV2KX1cbiAgICAgICAgPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3NOYW1lPVwiZmlsdGVyLWl0ZW1fX3RpdGxlXCI+XG4gICAgICAgICAgICAgICAge2xhYmVsfVxuICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgPGltZ1xuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImZpbHRlci1pdGVtX19waWN0dXJlXCJcbiAgICAgICAgICAgICAgICBzcmM9e2ltYWdlfVxuICAgICAgICAgICAgICAgIGFsdD17aW1hZ2UgJiYgJ2ZpbHRlciBpY29uJ31cbiAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgY2xhc3NOYW1lPVwiZmlsdGVyLWl0ZW1fX2Ryb3Bkb3duXCJcbiAgICAgICAgICAgICAgICBzdHlsZT17eyBkaXNwbGF5OiBzaG91bGREcm9wZG93blNob3cgPyAnYmxvY2snIDogJ25vbmUnIH19XG4gICAgICAgICAgICA+XG5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICApO1xufTtcbiIsIi8vIENvcHlyaWdodCAoQykgMjAyMSBDcmVkaXRvciBDb3JwLiBHcm91cC5cbi8vIFNlZSBMSUNFTlNFIGZvciBjb3B5aW5nIGluZm9ybWF0aW9uLlxuXG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IHJlY3RhbmdsZVxuICAgIGZyb20gJ0BzdGF0aWMvaW1nL0ZpbHRlckZpZWxkL3JlY3RhbmdsZS5zdmcnO1xuaW1wb3J0IHNlYXJjaFxuICAgIGZyb20gJ0BzdGF0aWMvaW1nL0ZpbHRlckZpZWxkL3NlYXJjaC5zdmcnO1xuaW1wb3J0IHN0YXJcbiAgICBmcm9tICdAc3RhdGljL2ltZy9GaWx0ZXJGaWVsZC9zdGFyLnN2Zyc7XG5pbXBvcnQgZnV0XG4gICAgZnJvbSAnQHN0YXRpYy9pbWcvRmlsdGVyRmllbGQvZnV0LnN2Zyc7XG5pbXBvcnQgZXllXG4gICAgZnJvbSAnQHN0YXRpYy9pbWcvRmlsdGVyRmllbGQvZXllLnN2Zyc7XG5pbXBvcnQgcGFyYW1ldHJlc1xuICAgIGZyb20gJ0BzdGF0aWMvaW1nL0ZpbHRlckZpZWxkL3BhcmFtZXRyZXMuc3ZnJztcblxuaW1wb3J0ICcuL2luZGV4LnNjc3MnO1xuaW1wb3J0IHsgRmlsdGVyRmllbGREcm9wZG93biB9IGZyb20gJy4vRmlsdGVyRmllbGREcm9wZG93bic7XG5cbmV4cG9ydCBjb25zdCBGaWx0ZXJGaWVsZDogUmVhY3QuRkM8eyB0aXRsZTogc3RyaW5nIH0+ID0gKHsgdGl0bGUgfSkgPT4ge1xuICAgIGNvbnN0IFtzZWFyY2hEYXRhLCBzZXRTZWFyY2hEYXRhXSA9IHVzZVN0YXRlKCcnKTtcblxuICAgIC8qKiBDbGFzcyBmb3IgZWFjaCBmaWx0ZXIgZmllbGQgaXRlbSAqL1xuICAgIGNsYXNzIEZpbHRlckl0ZW0ge1xuICAgICAgICAvKiogbGFiZSBpcyB0ZXh0IGZpbGxpbmcgb2YgZmllbGQsIGltYWdlIC0gc3JjIGZvciBpbWFnZSAgKi9cbiAgICAgICAgY29uc3RydWN0b3IoXG4gICAgICAgICAgICBwdWJsaWMgbGFiZWw6IHN0cmluZyxcbiAgICAgICAgICAgIHB1YmxpYyBpbWFnZTogc3RyaW5nLFxuICAgICAgICApIHsgfVxuICAgIH1cblxuICAgIGNvbnN0IGhhbmRsZVNlcmNoQ2hhbmdlID0gKGV2ZW50OiBhbnkpID0+IHtcbiAgICAgICAgc2V0U2VhcmNoRGF0YShldmVudC50YXJnZXQudmFsdWUpO1xuICAgIH07XG5cbiAgICBjb25zdCBmaWx0ZXJGaWVsZFRpdGxlczogRmlsdGVySXRlbVtdID0gW1xuICAgICAgICBuZXcgRmlsdGVySXRlbSgnVmVyc2lvbicsIHJlY3RhbmdsZSksXG4gICAgICAgIG5ldyBGaWx0ZXJJdGVtKCdQb3NpdGlvbnMnLCByZWN0YW5nbGUpLFxuICAgICAgICBuZXcgRmlsdGVySXRlbSgnTmF0aW9ucycsIHJlY3RhbmdsZSksXG4gICAgICAgIG5ldyBGaWx0ZXJJdGVtKCdMZWFndWVzJywgcmVjdGFuZ2xlKSxcbiAgICAgICAgbmV3IEZpbHRlckl0ZW0oJ1dSRicsIHJlY3RhbmdsZSksXG4gICAgICAgIG5ldyBGaWx0ZXJJdGVtKCdTdGF0cycsIHJlY3RhbmdsZSksXG4gICAgICAgIG5ldyBGaWx0ZXJJdGVtKCcnLCBzdGFyKSxcbiAgICAgICAgbmV3IEZpbHRlckl0ZW0oJ1BTJywgZnV0KSxcbiAgICAgICAgbmV3IEZpbHRlckl0ZW0oJ1QmUycsIHJlY3RhbmdsZSksXG4gICAgICAgIG5ldyBGaWx0ZXJJdGVtKCcnLCBleWUpLFxuICAgICAgICBuZXcgRmlsdGVySXRlbSgnJywgc3RhciksXG4gICAgICAgIG5ldyBGaWx0ZXJJdGVtKCdSUFAnLCByZWN0YW5nbGUpLFxuICAgICAgICBuZXcgRmlsdGVySXRlbSgnJywgcGFyYW1ldHJlcyksXG4gICAgICAgIG5ldyBGaWx0ZXJJdGVtKCdNaXNjJywgcmVjdGFuZ2xlKSxcbiAgICBdO1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPVwiZmlsdGVyLWZpZWxkXCI+XG4gICAgICAgICAgICA8aDEgY2xhc3NOYW1lPVwiZmlsdGVyLWZpZWxkX190aXRsZVwiPlxuICAgICAgICAgICAgICAgIHt0aXRsZX1cbiAgICAgICAgICAgIDwvaDE+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImZpbHRlci1maWVsZF9fd3JhcHBlclwiPlxuICAgICAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9XCJmaWx0ZXItZmllbGRfX2xpc3RcIj5cbiAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzTmFtZT1cImZpbHRlci1maWVsZF9fbGlzdF9faXRlbVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGltZ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz17c2VhcmNofVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsdD1cIkZpbHRlciBJY29uXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmaWx0ZXItZmllbGRfX2xpc3RfX2l0ZW1fX3BpY3R1cmVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPXtzZWFyY2hEYXRhfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPVwiU2VhcmNoXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmaWx0ZXItZmllbGRfX2xpc3RfX2l0ZW1fX3NlYXJjaFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9e2hhbmRsZVNlcmNoQ2hhbmdlfVxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICAgICAge2ZpbHRlckZpZWxkVGl0bGVzLm1hcCgoaXRlbSwgaW5kZXgpID0+XG4gICAgICAgICAgICAgICAgICAgICAgICA8bGlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJmaWx0ZXItZmllbGRfX2xpc3RfX2l0ZW1cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleT17aW5kZXh9XG4gICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPEZpbHRlckZpZWxkRHJvcGRvd24gcHJvcHM9e2l0ZW19IC8+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2xpPlxuICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9zZWN0aW9uID5cbiAgICApO1xufTtcbiIsIi8vIENvcHlyaWdodCAoQykgMjAyMSBDcmVkaXRvciBDb3JwLiBHcm91cC5cbi8vIFNlZSBMSUNFTlNFIGZvciBjb3B5aW5nIGluZm9ybWF0aW9uLlxuXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuZXhwb3J0IGNvbnN0IFBhZ2luYXRvckJsb2NrUGFnZXM6IFJlYWN0LkZDPHtcbiAgICBibG9ja1BhZ2VzOiBudW1iZXJbXTtcbiAgICBvblBhZ2VDaGFuZ2U6ICh0eXBlOiBzdHJpbmcsIHBhZ2VOdW1iZXI/OiBudW1iZXIpID0+IHZvaWQ7XG59PiA9ICh7IGJsb2NrUGFnZXMsIG9uUGFnZUNoYW5nZSB9KSA9PlxuICAgICAgICA8dWwgY2xhc3NOYW1lPVwidWx0aW1hdGVkaXZpc2lvbi1wYWdpbmF0b3JfX3BhZ2VzXCI+XG4gICAgICAgICAgICB7YmxvY2tQYWdlcy5tYXAoKHBhZ2UsIGluZGV4KSA9PlxuICAgICAgICAgICAgICAgIDxsaVxuICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ1bHRpbWF0ZWRpdmlzaW9uLXBhZ2luYXRvcl9fcGFnZXNfX2l0ZW1cIlxuICAgICAgICAgICAgICAgICAgICBrZXk9e2luZGV4fVxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvblBhZ2VDaGFuZ2UoJ2NoYW5nZSBwYWdlJywgcGFnZSl9XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICB7cGFnZX1cbiAgICAgICAgICAgICAgICA8L2xpPixcbiAgICAgICAgICAgICl9XG4gICAgICAgIDwvdWw+XG4gICAgO1xuIiwiLy8gQ29weXJpZ2h0IChDKSAyMDIxIENyZWRpdG9yIENvcnAuIEdyb3VwLlxuLy8gU2VlIExJQ0VOU0UgZm9yIGNvcHlpbmcgaW5mb3JtYXRpb24uXG4vKiBlc2xpbnQtZGlzYWJsZSAqL1xuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IG5leHQgZnJvbSAnQHN0YXRpYy9pbWcvVWx0aW1hdGVEaXZpc2lvblBhZ2luYXRvci9uZXh0LnN2Zyc7XG5pbXBvcnQgcHJldmlvdXMgZnJvbSAnQHN0YXRpYy9pbWcvVWx0aW1hdGVEaXZpc2lvblBhZ2luYXRvci9wcmV2aW91cy5zdmcnO1xuaW1wb3J0IHsgUGFnaW5hdG9yQmxvY2tQYWdlcyB9IGZyb20gJ0Bjb21wb25lbnRzL2NvbW1vbi9QYWdpbmF0b3IvUGFnaW5hdG9yQmxvY2tQYWdlcyc7XG5cbmltcG9ydCAnLi9pbmRleC5zY3NzJztcblxuZXhwb3J0IGNvbnN0IFBhZ2luYXRvcjogUmVhY3QuRkM8eyBpdGVtQ291bnQ6IG51bWJlciB9PiA9ICh7IGl0ZW1Db3VudCB9KSA9PiB7XG4gICAgY29uc3QgRklSU1RfSVRFTV9QQUdJTkFUT04gPSAxO1xuICAgIGNvbnN0IFtjdXJyZW50UGFnZSwgc2V0Q3VycmVudFBhZ2VdID0gdXNlU3RhdGU8bnVtYmVyPihGSVJTVF9JVEVNX1BBR0lOQVRPTik7XG4gICAgLyoqXG4gICAgKiBzcGxpdCB0aGUgcGFnZSBpbnRvIDMgYmxvY2tzIHRoYXQgY2FuIGJlIG5lZWRlZFxuICAgICogdG8gc2VwYXJhdGUgcGFnZSBudW1iZXJzXG4gICAgICovXG4gICAgY29uc3QgW2ZpcnN0QmxvY2tQYWdlcywgc2V0Rmlyc3RCbG9ja1BhZ2VzXSA9IHVzZVN0YXRlPG51bWJlcltdPihbXSk7XG4gICAgY29uc3QgW21pZGRsZUJsb2NrUGFnZXMsIHNldE1pZGRsZUJsb2NrUGFnZXNdID0gdXNlU3RhdGU8bnVtYmVyW10+KFtdKTtcbiAgICBjb25zdCBbbGFzdEJsb2NrUGFnZXMsIHNldExhc3RCbG9ja1BhZ2VzXSA9IHVzZVN0YXRlPG51bWJlcltdPihbXSk7XG5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBwb3B1bGF0ZVBhZ2VzKCk7XG4gICAgfSwgW2N1cnJlbnRQYWdlXSk7XG5cbiAgICBjb25zdCBDQVJEU19PTl9QQUdFOiBudW1iZXIgPSA4O1xuICAgIGNvbnN0IE1BWF9QQUdFU19QRVJfQkxPQ0s6IG51bWJlciA9IDU7XG4gICAgY29uc3QgTUFYX1BBR0VTX09GRl9CTE9DS1M6IG51bWJlciA9IDEwO1xuICAgIGNvbnN0IEZJUlNUX1BBR0VfSU5ERVg6IG51bWJlciA9IDA7XG4gICAgY29uc3QgU0VDT05EX1BBR0VfSU5ERVg6IG51bWJlciA9IDE7XG4gICAgY29uc3QgRklSU1RfUEFHRV9JTkRFWF9GUk9NX0VORDogbnVtYmVyID0gLTE7XG4gICAgY29uc3QgTkVHX1NURVBfRlJPTV9DVVJSRU5UX1BBR0U6IG51bWJlciA9IC0zO1xuICAgIGNvbnN0IFBPU19TVEVQX0ZST01fQ1VSUkVOVF9QQUdFOiBudW1iZXIgPSAyO1xuXG4gICAgY29uc3QgcGFnZXM6IG51bWJlcltdID0gW107XG4gICAgZm9yIChsZXQgaSA9IDE7IGkgPD0gTWF0aC5jZWlsKGl0ZW1Db3VudCAvIENBUkRTX09OX1BBR0UpOyBpKyspIHtcbiAgICAgICAgcGFnZXMucHVzaChpKTtcbiAgICB9XG4gICAgLyoqIHNldCBibG9jayBwYWdlcyBkZXBlbmRzIG9uIGN1cnJlbnQgcGFnZSAqL1xuICAgIGNvbnN0IHNldEJsb2Nrc0lmQ3VycmVudEluRmlyc3RCbG9jayA9ICgpID0+IHtcbiAgICAgICAgc2V0Rmlyc3RCbG9ja1BhZ2VzKHBhZ2VzLnNsaWNlKEZJUlNUX1BBR0VfSU5ERVgsIE1BWF9QQUdFU19QRVJfQkxPQ0spKTtcbiAgICAgICAgc2V0TWlkZGxlQmxvY2tQYWdlcyhbXSk7XG4gICAgICAgIHNldExhc3RCbG9ja1BhZ2VzKHBhZ2VzLnNsaWNlKEZJUlNUX1BBR0VfSU5ERVhfRlJPTV9FTkQpKTtcbiAgICB9O1xuICAgIGNvbnN0IHNldEJsb2Nrc0lmQ3VycmVudEluTWlkZGxlQmxvY2sgPSAoKSA9PiB7XG4gICAgICAgIHNldEZpcnN0QmxvY2tQYWdlcyhwYWdlcy5zbGljZShGSVJTVF9QQUdFX0lOREVYLCBTRUNPTkRfUEFHRV9JTkRFWCkpO1xuICAgICAgICBzZXRNaWRkbGVCbG9ja1BhZ2VzKHBhZ2VzLnNsaWNlKGN1cnJlbnRQYWdlICsgTkVHX1NURVBfRlJPTV9DVVJSRU5UX1BBR0UsIGN1cnJlbnRQYWdlICsgUE9TX1NURVBfRlJPTV9DVVJSRU5UX1BBR0UpKTtcbiAgICAgICAgc2V0TGFzdEJsb2NrUGFnZXMocGFnZXMuc2xpY2UoRklSU1RfUEFHRV9JTkRFWF9GUk9NX0VORCkpO1xuICAgIH07XG4gICAgY29uc3Qgc2V0QmxvY2tzSWZDdXJyZW50SW5MYXN0QmxvY2sgPSAoKSA9PiB7XG4gICAgICAgIHNldEZpcnN0QmxvY2tQYWdlcyhwYWdlcy5zbGljZShGSVJTVF9QQUdFX0lOREVYLCBTRUNPTkRfUEFHRV9JTkRFWCkpO1xuICAgICAgICBzZXRNaWRkbGVCbG9ja1BhZ2VzKFtdKTtcbiAgICAgICAgc2V0TGFzdEJsb2NrUGFnZXMocGFnZXMuc2xpY2UoLU1BWF9QQUdFU19QRVJfQkxPQ0spKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICogSW5kaWNhdGVzIHZpc2liaWxpdHkgb2YgZG90cyBhZnRlciBmaXJzdCBwYWdlcyBibG9ja1xuICAgICAqL1xuICAgIGNvbnN0IGlzRmlyc3REb3RzU2hvd246IGJvb2xlYW4gPVxuICAgICAgICBtaWRkbGVCbG9ja1BhZ2VzLmxlbmd0aCA8PSBNQVhfUEFHRVNfUEVSX0JMT0NLXG4gICAgICAgICYmIHBhZ2VzLmxlbmd0aCA+IE1BWF9QQUdFU19PRkZfQkxPQ0tTO1xuICAgIC8qXG4gICAgKiBJbmRpY2F0ZXMgdmlzaWJpbGl0eSBvZiBkb3RzIGFmdGVyIG1pZGRsZSBwYWdlcyBibG9ja1xuICAgICAqL1xuICAgIGNvbnN0IGlzU2Vjb25kRG90c1Nob3duOiBib29sZWFuID0gISFtaWRkbGVCbG9ja1BhZ2VzLmxlbmd0aDtcbiAgICAvKipcbiAgICAgKiBpbmRpY2F0ZXMgaW4gd2hpY2ggYmxvY2sgY3VycmVudCBwYWdlXG4gICAgICovXG4gICAgY29uc3QgaXNDdXJyZW50SW5GaXJzdEJsb2NrOiBib29sZWFuID0gY3VycmVudFBhZ2UgPCBNQVhfUEFHRVNfUEVSX0JMT0NLO1xuICAgIGNvbnN0IGlzQ3VycmVudEluTGFzdEJsb2NrOiBib29sZWFuID0gcGFnZXMubGVuZ3RoIC0gY3VycmVudFBhZ2UgPCBNQVhfUEFHRVNfUEVSX0JMT0NLIC0gU0VDT05EX1BBR0VfSU5ERVg7XG4gICAgLyoqXG4gICAgICogY2hhbmdlIHBhZ2UgYmxvY2tzIHJlb3JnYW5pemF0aW9uIGRlcGVuZHNcbiAgICAgKiBvbiBjdXJyZW50IHBhZ2VcbiAgICAgKi9cbiAgICBjb25zdCByZW9yZ2FuaXplUGFnZXNCbG9jayA9ICgpID0+IHtcbiAgICAgICAgaWYgKGlzT25lQmxvY2tSZXF1aXJlZCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc0N1cnJlbnRJbkZpcnN0QmxvY2spIHtcbiAgICAgICAgICAgIHNldEJsb2Nrc0lmQ3VycmVudEluRmlyc3RCbG9jaygpO1xuXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFpc0N1cnJlbnRJbkZpcnN0QmxvY2sgJiYgIWlzQ3VycmVudEluTGFzdEJsb2NrKSB7XG4gICAgICAgICAgICBzZXRCbG9ja3NJZkN1cnJlbnRJbk1pZGRsZUJsb2NrKCk7XG5cbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNDdXJyZW50SW5MYXN0QmxvY2spIHtcbiAgICAgICAgICAgIHNldEJsb2Nrc0lmQ3VycmVudEluTGFzdEJsb2NrKCk7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIC8qXG4gICAgKiBpbmRpY2F0ZXMgaWYgZG90cyBkZWxpbWl0ZXIgaXMgbmVlZGVkXG4gICAgKiB0byBzZXBhcmF0ZSBwYWdlIG51bWJlcnNcbiAgICAqL1xuICAgIGNvbnN0IGlzT25lQmxvY2tSZXF1aXJlZDogYm9vbGVhbiA9IHBhZ2VzLmxlbmd0aCA8PSBNQVhfUEFHRVNfT0ZGX0JMT0NLUztcbiAgICBjb25zdCBwb3B1bGF0ZVBhZ2VzID0gKCkgPT4ge1xuICAgICAgICBpZiAoIXBhZ2VzLmxlbmd0aCkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGlmIChpc09uZUJsb2NrUmVxdWlyZWQpIHtcbiAgICAgICAgICAgIHNldEZpcnN0QmxvY2tQYWdlcyhwYWdlcy5zbGljZSgpKTtcbiAgICAgICAgICAgIHNldE1pZGRsZUJsb2NrUGFnZXMoW10pO1xuICAgICAgICAgICAgc2V0TGFzdEJsb2NrUGFnZXMoW10pO1xuXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICAgICAgcmVvcmdhbml6ZVBhZ2VzQmxvY2soKTtcbiAgICB9O1xuICAgIC8qKlxuICAgICAqIGNoYW5nZSBjdXJyZW50IHBhZ2UgYW5kIHNldCBwYWdlcyBibG9ja1xuICAgICAqL1xuICAgIGNvbnN0IG9uUGFnZUNoYW5nZSA9ICh0eXBlOiBzdHJpbmcsIHBhZ2VOdW1iZXI6IG51bWJlciA9IGN1cnJlbnRQYWdlKTogdm9pZCA9PiB7XG4gICAgICAgIGNvbnN0IFNURVBfRlJPTV9DVVJSRU5UX1BBR0UgPSAxO1xuICAgICAgICBzd2l0Y2ggKHR5cGUpIHtcbiAgICAgICAgICAgIGNhc2UgJ25leHQgcGFnZSc6XG4gICAgICAgICAgICAgICAgaWYgKHBhZ2VOdW1iZXIgPCBwYWdlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICAgICAgc2V0Q3VycmVudFBhZ2UocGFnZU51bWJlciArIFNURVBfRlJPTV9DVVJSRU5UX1BBR0UpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBwb3B1bGF0ZVBhZ2VzKCk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICBjYXNlICdwcmV2aW91cyBwYWdlJzpcbiAgICAgICAgICAgICAgICBpZiAocGFnZU51bWJlciA+IFNFQ09ORF9QQUdFX0lOREVYKSB7XG4gICAgICAgICAgICAgICAgICAgIHNldEN1cnJlbnRQYWdlKHBhZ2VOdW1iZXIgLSBTVEVQX0ZST01fQ1VSUkVOVF9QQUdFKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcG9wdWxhdGVQYWdlcygpO1xuXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgY2FzZSAnY2hhbmdlIHBhZ2UnOlxuICAgICAgICAgICAgICAgIHNldEN1cnJlbnRQYWdlKHBhZ2VOdW1iZXIpO1xuICAgICAgICAgICAgICAgIHBvcHVsYXRlUGFnZXMoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcG9wdWxhdGVQYWdlcygpO1xuICAgICAgICB9XG4gICAgfTtcblxuICAgIHJldHVybiAoXG4gICAgICAgIDxzZWN0aW9uIGNsYXNzTmFtZT1cInVsdGltYXRlZGl2aXNpb24tcGFnaW5hdG9yXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInVsdGltYXRlZGl2aXNpb24tcGFnaW5hdG9yX193cmFwcGVyXCI+XG4gICAgICAgICAgICAgICAgPGEgY2xhc3NOYW1lPVwidWx0aW1hdGVkaXZpc2lvbi1wYWdpbmF0b3JfX3ByZXZpb3VzXCJcbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gb25QYWdlQ2hhbmdlKCdwcmV2aW91cyBwYWdlJyl9PlxuICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzTmFtZT1cInVsdGltYXRlZGl2aXNpb24tcGFnaW5hdG9yX19wcmV2aW91c19fYXJyb3dcIlxuICAgICAgICAgICAgICAgICAgICAgICAgc3JjPXtwcmV2aW91c31cbiAgICAgICAgICAgICAgICAgICAgICAgIGFsdD1cIlByZXZpb3VzIHBhZ2VcIiAvPlxuICAgICAgICAgICAgICAgICAgICA8cCBjbGFzc05hbWU9XCJ1bHRpbWF0ZWRpdmlzaW9uLXBhZ2luYXRvcl9fcHJldmlvdXNfX3RpdGxlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICBQcmV2aW91cyBwYWdlXG4gICAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICA8L2E+XG4gICAgICAgICAgICAgICAgPFBhZ2luYXRvckJsb2NrUGFnZXNcbiAgICAgICAgICAgICAgICAgICAgYmxvY2tQYWdlcz17Zmlyc3RCbG9ja1BhZ2VzfVxuICAgICAgICAgICAgICAgICAgICBvblBhZ2VDaGFuZ2U9e29uUGFnZUNoYW5nZX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIHtpc0ZpcnN0RG90c1Nob3duXG4gICAgICAgICAgICAgICAgICAgICYmIDxzcGFuIGNsYXNzTmFtZT1cInVsdGltYXRlZGl2aXNpb24tcGFnaW5hdG9yX19wYWdlc19fZG90c1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgLi4uPC9zcGFuPn1cbiAgICAgICAgICAgICAgICA8UGFnaW5hdG9yQmxvY2tQYWdlc1xuICAgICAgICAgICAgICAgICAgICBibG9ja1BhZ2VzPXttaWRkbGVCbG9ja1BhZ2VzfVxuICAgICAgICAgICAgICAgICAgICBvblBhZ2VDaGFuZ2U9e29uUGFnZUNoYW5nZX1cbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIHtpc1NlY29uZERvdHNTaG93blxuICAgICAgICAgICAgICAgICAgICAmJiA8c3BhbiBjbGFzc05hbWU9XCJ1bHRpbWF0ZWRpdmlzaW9uLXBhZ2luYXRvcl9fcGFnZXNfX2RvdHNcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIC4uLjwvc3Bhbj59XG4gICAgICAgICAgICAgICAgPFBhZ2luYXRvckJsb2NrUGFnZXNcbiAgICAgICAgICAgICAgICAgICAgYmxvY2tQYWdlcz17bGFzdEJsb2NrUGFnZXN9XG4gICAgICAgICAgICAgICAgICAgIG9uUGFnZUNoYW5nZT17b25QYWdlQ2hhbmdlfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPGEgY2xhc3NOYW1lPVwidWx0aW1hdGVkaXZpc2lvbi1wYWdpbmF0b3JfX25leHRcIlxuICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBvblBhZ2VDaGFuZ2UoJ25leHQgcGFnZScpfT5cbiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwidWx0aW1hdGVkaXZpc2lvbi1wYWdpbmF0b3JfX25leHRfX3RpdGxlXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICBOZXh0IHBhZ2VcbiAgICAgICAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzTmFtZT1cInVsdGltYXRlZGl2aXNpb24tcGFnaW5hdG9yX19uZXh0X19hcnJvd1wiXG4gICAgICAgICAgICAgICAgICAgICAgICBzcmM9e25leHR9XG4gICAgICAgICAgICAgICAgICAgICAgICBhbHQ9XCJOZXh0IHBhZ2VcIiAvPlxuICAgICAgICAgICAgICAgIDwvYT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L3NlY3Rpb24+XG4gICAgKTtcbn07XG4iLCIvLyBDb3B5cmlnaHQgKEMpIDIwMjEgQ3JlZGl0b3IgQ29ycC4gR3JvdXAuXG4vLyBTZWUgTElDRU5TRSBmb3IgY29weWluZyBpbmZvcm1hdGlvbi5cblxuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlci1kb20nO1xuXG5pbXBvcnQgeyBSb3V0ZUNvbmZpZyB9IGZyb20gJ0AvYXBwL3JvdXRlcic7XG5cbmltcG9ydCB7IENhcmQgfSBmcm9tICdAL2NhcmQnO1xuXG5leHBvcnQgY29uc3QgUGxheWVyQ2FyZDogUmVhY3QuRkM8eyBjYXJkOiBDYXJkOyBwYXJlbnRDbGFzc05hbWU6IHN0cmluZyB9PiA9ICh7XG4gICAgY2FyZCwgcGFyZW50Q2xhc3NOYW1lLFxufSkgPT5cbiAgICA8PlxuICAgICAgICA8aW1nXG4gICAgICAgICAgICBjbGFzc05hbWU9e2Ake3BhcmVudENsYXNzTmFtZX1fX2JhY2tncm91bmQtdHlwZWB9XG4gICAgICAgICAgICBzcmM9e2NhcmQuc3R5bGU/LmJhY2tncm91bmR9XG4gICAgICAgICAgICBhbHQ9XCJiYWNrZ3JvdW5kIGltZ1wiXG4gICAgICAgICAgICBkcmFnZ2FibGU9e2ZhbHNlfVxuICAgICAgICAvPlxuICAgICAgICA8aW1nXG4gICAgICAgICAgICBjbGFzc05hbWU9e2Ake3BhcmVudENsYXNzTmFtZX1fX2ZhY2UtcGljdHVyZWB9XG4gICAgICAgICAgICBzcmM9e2NhcmQuZmFjZX1cbiAgICAgICAgICAgIGFsdD1cIlBsYXllciBmYWNlXCJcbiAgICAgICAgICAgIGRyYWdnYWJsZT17ZmFsc2V9XG4gICAgICAgIC8+XG4gICAgICAgIDxMaW5rXG4gICAgICAgICAgICB0bz17e1xuICAgICAgICAgICAgICAgIHBhdGhuYW1lOiBSb3V0ZUNvbmZpZy5Gb290YmFsbGVyQ2FyZC5wYXRoLFxuICAgICAgICAgICAgICAgIHN0YXRlOiB7XG4gICAgICAgICAgICAgICAgICAgIGNhcmQsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIH19XG4gICAgICAgID5cbiAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT17YCR7cGFyZW50Q2xhc3NOYW1lfV9fbmFtZWB9PlxuICAgICAgICAgICAgICAgIHtjYXJkLnBsYXllck5hbWV9XG4gICAgICAgICAgICA8L3NwYW4+XG4gICAgICAgIDwvTGluaz5cbiAgICAgICAgPHVsIGNsYXNzTmFtZT17YCR7cGFyZW50Q2xhc3NOYW1lfV9fbGlzdGB9PlxuICAgICAgICAgICAge2NhcmQuc3RhdHNBcmVhLm1hcChcbiAgICAgICAgICAgICAgICAocHJvcGVydHksIGluZGV4KSA9PlxuICAgICAgICAgICAgICAgICAgICA8bGlcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17YCR7cGFyZW50Q2xhc3NOYW1lfV9fbGlzdF9faXRlbWB9XG4gICAgICAgICAgICAgICAgICAgICAgICBrZXk9e2luZGV4fT5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKiBnZXQgb25seSBhdmVyYWdlIHZhbHVlIG9mIHBsYXllcidzIGdhbWUgcHJvcGVydHlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKi9cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBgJHtwcm9wZXJ0eS5hYmJyZXZpYXRlZH0gJHtwcm9wZXJ0eS5hdmVyYWdlfSBgXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIDwvbGk+LFxuICAgICAgICAgICAgKX1cbiAgICAgICAgPC91bD5cbiAgICA8Lz47XG4iLCIvLyBDb3B5cmlnaHQgKEMpIDIwMjEgQ3JlZGl0b3IgQ29ycC4gR3JvdXAuXG4vLyBTZWUgTElDRU5TRSBmb3IgY29weWluZyBpbmZvcm1hdGlvbi5cblxuaW1wb3J0IHsgdXNlRWZmZWN0fSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyB1c2VEaXNwYXRjaCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcblxuZXhwb3J0IGNvbnN0IHVzZUNhcmRzID0gKHRodW5rOiBhbnkpID0+IHtcblxuICAgIGNvbnN0IGRpc3BhdGNoID0gdXNlRGlzcGF0Y2goKTtcblxuICAgIC8qKiBDYWxscyBtZXRob2QgZ2V0IGZyb20gIENsdWJDbGllbnQgKi9cbiAgICBhc3luYyBmdW5jdGlvbiBnZXREYXRhRnJvbUFwaSgpIHtcbiAgICAgICAgYXdhaXQgZGlzcGF0Y2godGh1bmsoKSk7XG4gICAgfTtcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGdldERhdGFGcm9tQXBpKCk7XG4gICAgfSwgW10pO1xuXG59O1xuIiwiLy8gQ29weXJpZ2h0IChDKSAyMDIxIENyZWRpdG9yIENvcnAuIEdyb3VwLlxuLy8gU2VlIExJQ0VOU0UgZm9yIGNvcHlpbmcgaW5mb3JtYXRpb24uXG5cbmltcG9ydCB7IENhcmQgfSBmcm9tICdAL2NhcmQnO1xuXG5pbXBvcnQgeyBNeUNhcmQgfSBmcm9tICcuL015Q2FyZCc7XG5cbmltcG9ydCAnLi9pbmRleC5zY3NzJztcblxuZXhwb3J0IGNvbnN0IENsdWJDYXJkc0FyZWE6IFJlYWN0LkZDPHtjYXJkczogQ2FyZFtdfT4gPSAoeyBjYXJkcyB9KSA9PlxuICAgIDxkaXYgY2xhc3NOYW1lPVwiY2x1Yi1jYXJkc1wiPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImNsdWItY2FyZHNfX3dyYXBwZXJcIj5cbiAgICAgICAgICAgIHtjYXJkcy5tYXAoKGNhcmQsIGluZGV4KSA9PlxuICAgICAgICAgICAgICAgIDxNeUNhcmRcbiAgICAgICAgICAgICAgICAgICAgY2FyZD17Y2FyZH1cbiAgICAgICAgICAgICAgICAgICAga2V5PXtpbmRleH1cbiAgICAgICAgICAgICAgICAvPixcbiAgICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuICAgIDwvZGl2PjtcblxuIiwiLy8gQ29weXJpZ2h0IChDKSAyMDIxIENyZWRpdG9yIENvcnAuIEdyb3VwLlxuLy8gU2VlIExJQ0VOU0UgZm9yIGNvcHlpbmcgaW5mb3JtYXRpb24uXG5cbmltcG9ydCB7IHVzZVNlbGVjdG9yIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuXG5pbXBvcnQgeyBSb290U3RhdGUgfSBmcm9tICdAL2FwcC9zdG9yZSc7XG5pbXBvcnQgeyB1c2VDYXJkcyB9IGZyb20gJ0AvYXBwL2hvb2tzL2NhcmRzJztcbmltcG9ydCB7IHVzZXJDYXJkcyB9IGZyb20gJ0AvYXBwL3N0b3JlL2FjdGlvbnMvY2FyZHMnO1xuXG5pbXBvcnQgeyBDbHViQ2FyZHNBcmVhIH0gZnJvbSAnQGNvbXBvbmVudHMvQ2x1Yi9DbHViQ2FyZHNBcmVhJztcbmltcG9ydCB7IEZpbHRlckZpZWxkIH0gZnJvbSAnQGNvbXBvbmVudHMvY29tbW9uL0ZpbHRlckZpZWxkJztcbmltcG9ydCB7IFBhZ2luYXRvciB9IGZyb20gJ0Bjb21wb25lbnRzL2NvbW1vbi9QYWdpbmF0b3InO1xuXG5pbXBvcnQgJy4vaW5kZXguc2Nzcyc7XG5cbmNvbnN0IENsdWI6IFJlYWN0LkZDID0gKCkgPT4ge1xuICAgIC8qKiBUT0RPOiBkZWNpZGUgdXNlIGN1c3RvbSBob29rIG9yIGRpcmVjdGx5IGRpc3BhdGNoIHRodW5rIGludG8gdXNlRWZmZWN0Ki9cbiAgICB1c2VDYXJkcyh1c2VyQ2FyZHMpO1xuXG4gICAgY29uc3QgY2FyZHMgPSB1c2VTZWxlY3Rvcigoc3RhdGU6IFJvb3RTdGF0ZSkgPT4gc3RhdGUuY2FyZHNSZWR1Y2VyLmNsdWIpO1xuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPHNlY3Rpb24gY2xhc3NOYW1lPVwiY2x1YlwiPlxuICAgICAgICAgICAgPEZpbHRlckZpZWxkXG4gICAgICAgICAgICAgICAgdGl0bGU9XCJNeSBjYXJkc1wiXG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPENsdWJDYXJkc0FyZWFcbiAgICAgICAgICAgICAgICBjYXJkcz17Y2FyZHN9XG4gICAgICAgICAgICAvPlxuICAgICAgICAgICAgPFBhZ2luYXRvclxuICAgICAgICAgICAgICAgIGl0ZW1Db3VudD17Y2FyZHMubGVuZ3RofSAvPlxuICAgICAgICA8L3NlY3Rpb24+XG4gICAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENsdWI7XG4iXSwic291cmNlUm9vdCI6IiJ9